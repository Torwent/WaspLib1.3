function RandomBoolean(Probability: Int32 = 50): Boolean;
begin
  Result := Random(1, 100) <= Probability;
end;

function StringContains(MainString, SubString: String): Boolean;
begin
  Result := Pos(SubString, MainString) > 0;
end;

function StringSpacer(Str: String; CharAmount: Int32 = 10): String;
var
  i: Int32;
begin
  Result := Str;
  for i := 0 to (CharAmount - Result.Len()) do
    Result += ' ';
end;

function StringSpacer(Number: Int64; CharAmount: Int32 = 10): String; overload;
var
  i: Int32;
begin
  Result := IntToStr(Number);
  for i := 0 to (CharAmount - Result.Len()) do
    Result += ' ';
end;

function StringSpacer(Number: Extended; CharAmount: Int32 = 10): String; overload;
var
  i: Int32;
begin
  Result := IntToStr(Round(Number));
  for i := 0 to (CharAmount - Result.Len()) do
    Result += ' ';
end;


function GetPrice(Item: String): Int32;
var
  Link, Price: String;
begin
  Item := Replace(LowerCase(Item), ' ', '-',[rfReplaceAll]);

  Link := GetPage('https://www.ge-tracker.com/item/' + Item);
  Price:= between('<td id="item_stat_overall">','</td>', Link);
  Result := StrToIntDef(replace(Price, ',', '', [rfReplaceAll]), 0);
end;

function ConvertToRSGP(Amount: Int64): String;
var
  StringLength: Int32;
  Divider: UInt32;
  Suffix: String;
begin
  Result := '';
  StringLength := Length(IntToStr(Amount));
  if StringLength <= 3 then
  begin
    Suffix := '';
    Divider := 1;
  end
  if (StringLength >= 4) and (StringLength <= 6) then
  begin
    Suffix := 'k';
    Divider := 1000;
  end
  else if (StringLength >= 7) and (StringLength <= 9) then
  begin
    Suffix := 'm';
    Divider := 1000000;
  end
  else if (StringLength >= 10) and (StringLength <= 12) then
  begin
    Suffix := 'b';
    Divider := 1000000000;
  end
  else Exit();

  Result := FloatToStr(Round(Amount/Divider, 2)) + Suffix;
end;

function ConvertToRSGP(Amount: Extended): String; overload;
begin
  Result := ConvertToRSGP(Trunc(Amount));
end;



