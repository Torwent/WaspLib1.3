(*
Equipment
=========
The file holds functions and procedures that are used for controlling equipment.
*)

(*
type TRSEquipment
~~~~~~~~~~~~~~~~~~
The type that holds functions and properties of the Runescape equipment interface.
*)  
type 
  TRSEquipment = record(TInterfaceBase)
    FBoxes: TBoxArray;
  end;

{==| Table of Contents |=======================
 procedure TRSEquipment.__setup();
 function TRSEquipment.Open(): Boolean;
 function TRSEquipment.IsOpen(): Boolean;
}

(*
var Equipment
~~~~~~~~~~~~~~
Variable that stores functions and properties of the Runescape equipment interface.
*)
var 
  Equipment: TRSEquipment;


{$IFNDEF CODEINSIGHT}
procedure TRSEquipment.__Setup();
begin
  with Self do
  begin
    FName := 'Equipment';
    FStatic := True; 
    FBounds := [548,206,735,464]; 
    FBoxes := [
      [626,210,657,243], //head
      [585,249,616,282], //left back
      [626,249,657,282], //right back
      [667,249,698,282], //arrows
      [570,288,601,321], //right "arm"
      [626,288,657,321], //upper-body
      [682,288,713,321], //left "arm"
      [626,328,657,361], //legs
      [570,368,601,401], //right "hand"
      [626,368,657,401], //feet
      [682,368,713,401]  //left "hand"
    ];
  end;
end;

procedure TRSEquipment.Debug();
var
  BMP: TMufasaBitmap;
begin
  BMP := GetMufasaBitmap( BitmapFromClient(SRL.DefaultClientBounds) );
  BMP.DrawBoxes(Self.FBoxes, False, $0000FF);
  BMP.DrawBox(FBounds, False, $00FF00);
  BMP.Debug();
  BMP.Free();
end;
{$ENDIF}

(*
Equipment.Open
~~~~~~~~~~~~~~~
.. code-block:: pascal

  function TRSEquipment.Open(): Boolean;

Opens the interface
*)
function TRSEquipment.Open(): Boolean;
begin
  Result := Gametabs.Open(tabEquipment);
end;

(*
Equipment.IsSlotUsed
~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

  function TRSEquipment.IsSlotUsed(Slot: Integer): Boolean;

Opens the eqiupment tab and checks if a slot is used.
*)
function TRSEquipment.IsSlotUsed(Slot: Integer): Boolean;
begin
  if Self.Open() then
    Result := CountColor($10000, FBoxes[Slot]) > 0;
end;

(*
Equipment.IsOpen
~~~~~~~~~~~~~~~~~
.. code-block:: pascal

  function TRSEquipment.IsOpen(): Boolean;

Checks if the interface is already open.
*)
function TRSEquipment.IsOpen(maxWait:Int32=0): Boolean;
begin
  Result := Gametabs.IsOpen(tabEquipment, maxWait);
end;

function TRSEquipment.MouseSlot(Slot: Int32; Button: Int32 = mouse_Move): Boolean;
begin
  if Self.Open() and (CountColor($10000, FBoxes[Slot]) > 0) then
  begin
    Mouse.Move(FBoxes[Slot]);
    if (Button <> mouse_Move) then
      Mouse.Click(Button);

    Exit(True);
  end;
end;

(*
Equipment.InteractSlot
~~~~~~~~~~~~~~~~~~~~~~
.. code-block:: pascal

  function TRSEquipment.InteractSlot(): Boolean;

Interacts with the item at the given slot using given option
*)
function TRSEquipment.InteractSlot(Slot: Integer; Option: String; UpText: String = ''): Boolean;
var
  B: TBox;
begin
  if (not Self.Open) then
    Exit(False);
  B := FBoxes[Slot];
  if (CountColor($10000, B) = 0) then
    Exit(False);
  Mouse.Move(B);
  if (UpText <> '') and (not Mainscreen.isUpText(UpText)) then
    Exit(False);
  Result := ChooseOption.Open() and ChooseOption.Select(Option);
end;

(*
Equipment.Remove
~~~~~~~~~~~~~~~~~
.. code-block:: pascal

  function TRSEquipment.Remove(): Boolean;

Unequips the item at the given slot
*)
function TRSEquipment.Remove(Slot: Integer; UpText: String = ''): Boolean;
begin
  Result := Self.InteractSlot(Slot, 'Remove', UpText);
end;


begin
  equipment.__setup();
end;
