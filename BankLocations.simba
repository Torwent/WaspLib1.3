type
  EBankLoc = (blCastleWars, blGrandExchange, blFeroxEnclave);
  TWaspBanking = record
    Location: EBankLoc;
    ClosestBankTile: TPoint;
    ClosestBankTiles: TPointArray;
    ClosestBankColor: TCTS2Color;
  end;

var
  WaspBanking: TWaspBanking;
  BankRSW: TRSWalker;

  VWestBank0 := Point(4553, 2673);
  VWestBank1 := Point(4553, 2680);
  VWestBank2 := Point(4553, 2688);
  VWestBank3 := Point(4553, 2696);
  VWestBank4 := Point(4554, 2705);

  VWestBank := [VWestBank0, VWestBank1, VWestBank2, VWestBank3, VWestBank4];
  VWestBankColor := CTS2(998986, 12, 0.13, 2.87);

  GEWestBank0 := Point(4459, 2487);
  GEWestBank1 := Point(4459, 2491);
  GEWestBank := [GEWestBank0, GeWestBank1];

  GEEastBank0 := Point(4476, 2488);
  GEEastBank1 := Point(4476, 2492);
  GEEastBank := [GEEastBank0, GEEastBank1];

  GEBank: T2DPointArray := [GEWestBank, GEEastBank];
  GEStructureColor := CTS2(2971242, 23, 0.05, 1.10);

  EdgeWestBank0 := Point(4189, 2492);
  EdgeWestBank1 := Point(4189, 2483);
  EdgeWestBank := [EdgeWestBank0, EdgeWestBank1];

  EdgeNorthBank0 := Point(4201, 2476);
  EdgeNorthBank1 := Point(4193, 2476);
  EdgeNorthBank := [EdgeNorthBank0, EdgeNorthBank1];
  EdgeBank: T2DPointArray := [EdgeWestBank, EdgeNorthBank];

  EdgeBankColor := CTS2(2711941, 22, 0.12, 2.21);

  CWBank := Point(1586, 4115);
  CWBankColor := CTS2(4475747, 15, 0.27, 1.09);

  FWestBank0 := Point(3589, 2980);
  FWestBank1 := Point(3593, 2980);
  FWestBank2 := Point(3597, 2980);
  FWestBank3 := Point(3601, 2980);
  FWestBank4 := Point(3605, 2980);
  FWestBank := [FWestBank0, FWestBank1, FWestBank2, FWestBank3, FWestBank4];
  FWestBankColor := CTS2(3230556, 21, 0.09, 0.91);

  CraftGuildBank := Point(3554, 3328);
  CraftGuildBankColor := CTS2(4475747, 15, 0.27, 1.09); // THIS IS JUST A PLACEHOLDER. NEEDS PROPER VALUES FIRST.

// Tries to open a bank with the specified Color at the specified Tile.
// Returns true if bankscreen is open.
function WaspBanking.OpenBank(Map: TRSWalker; Tile: TPoint; Color: TCTS2Color): Boolean;
begin
  if Obj.Click(Map, Tile, Color, ['Bank', 'booth', 'chest']) then
    Result := BankScreen.IsOpen(800) or PinScreen.IsOpen();
end;

// Same as above for multiple tiles.
function WaspBanking.OpenBank(Map: TRSWalker; Tiles: TPointArray; Color: TCTS2Color): Boolean; overload;
begin
  if Obj.Click(Map, Tiles, Color, ['Bank', 'booth', 'chest']) then
    Result := BankScreen.IsOpen(800) or PinScreen.IsOpen();
end;

function WaspBanking.WalkOpenBank(Map: TRSWalker; Tile: TPoint; Color: TCTS2Color): Boolean;
begin
  if Obj.WalkClick(Map, Tile, Color, ['Bank', 'booth', 'chest']) then
    Map.WaitPlayerMoving(4000);
  Result := BankScreen.IsOpen(1000) or PinScreen.IsOpen();
end;

function WaspBanking.WalkOpenBank(Map: TRSWalker; Tiles: TPointArray; Color: TCTS2Color): Boolean; overload
begin
  if Obj.WalkClick(Map, Tiles, Color, ['Bank', 'booth', 'chest']) then
    Map.WaitPlayerMoving(4000);
  Result := BankScreen.IsOpen(1000) or PinScreen.IsOpen();
end;

// Tries to open the collect box at bank with the specified Color at the specified Tile.
// Returns true if collect box is open.
function WaspBanking.OpenCollectBox(Map: TRSWalker; Tile: TPoint; Color: TCTS2Color): Boolean;
begin
  if Obj.SelectOption(Map, Tile, Color, ['Collect', 'Bank', 'booth', 'chest']) then
    Result := CollectBox.IsOpen(800) or PinScreen.IsOpen();
end;

function WaspBanking.OpenCollectBox(Map: TRSWalker; Tiles: TPointArray; Color: TCTS2Color): Boolean; overload;
begin
  if Obj.SelectOption(Map, Tiles, Color, ['Collect', 'Bank', 'booth', 'chest']) then
    Result := CollectBox.IsOpen(800) or PinScreen.IsOpen();
end;

function WaspBanking.WalkOpenCollectBox(Map: TRSWalker; Tile: TPoint; Color: TCTS2Color): Boolean;
begin
  if Obj.WalkSelectOption(Map, Tile, Color, ['Collect', 'Bank', 'booth', 'chest']) then
    Map.WaitPlayerMoving(4000);
  Result := CollectBox.IsOpen(1000) or PinScreen.IsOpen();
end;

function WaspBanking.WalkOpenCollectBox(Map: TRSWalker; Tiles: TPointArray; Color: TCTS2Color): Boolean; overload;
begin
  if Obj.WalkSelectOption(Map, Tiles, Color, ['Collect', 'Bank', 'booth', 'chest']) then
    Map.WaitPlayerMoving(4000);
  Result := CollectBox.IsOpen(1000) or PinScreen.IsOpen();
end;



// Loads a smaller map in a new instance of RSW for faster execution.
// Optionally you can set it to free the whole world map that is
// automatically loaded with my lib on WaspRSW.
procedure WaspBanking.LoadMap(DisableWorldWalker: Boolean = True);
begin
  if WaspWalker.AtLocation(WaspRSW, VWestBank, 100) then
  begin
    BankRSW.InitEx('world', [[3, 5], [3, 6]]);
    ClosestBankTiles := VWestBank;
    ClosestBankTile := ClosestBankTiles[Random(0, High(ClosestBankTiles))];
    ClosestBankColor := VWestBankColor;
  end

  else if WaspWalker.AtLocation(WaspRSW, FWestBank, 100) then
  begin
    BankRSW.InitEx('world', [[3, 4]]);
    ClosestBankTiles := FWestBank;
    ClosestBankTile := ClosestBankTiles[Random(0, High(ClosestBankTiles))];
    ClosestBankColor := FWestBankColor;
  end

  else if WaspWalker.AtLocation(WaspRSW, CraftGuildBank, 100) then
  begin
    BankRSW.InitEx('world', [[4, 4]]);
    ClosestBankTiles := [CraftGuildBank];
    ClosestBankTile := CraftGuildBank;
    ClosestBankColor := CraftGuildBankColor;
  end

  else if WaspWalker.AtLocation(WaspRSW, EdgeBank, 100) then
  begin
    BankRSW.InitEx('world', [[3, 5]]);
    ClosestBankTiles := WaspWalker.GetClosestTile(BankRSW, EdgeBank);
    ClosestBankTile := ClosestBankTiles[Random(0, High(ClosestBankTiles))];
    ClosestBankColor := EdgeBankColor;
  end

  else if WaspWalker.AtLocation(WaspRSW, CWBank, 100) then
  begin
    BankRSW.InitEx('world', [[5, 1], [5, 2]]);
    ClosestBankTiles := [CWBank];
    ClosestBankTile := CWBank;
    ClosestBankColor := CWBankColor;
  end

  else
  begin
    BankRSW.InitEx('world', [[3, 5], [3, 6]]);
    if WaspWalker.AtLocation(BankRSW, GEBank, 100) then
    begin
      ClosestBankTiles := WaspWalker.GetClosestTile(BankRSW, GEBank);
      ClosestBankTile := ClosestBankTiles[Random(0, High(ClosestBankTiles))];
      ClosestBankColor := GEStructureColor;
    end
    else
      TerminateScript('Cant find location');
  end;


  if DisableWorldWalker then WaspRSW.Free();
end;


// Opens the closest bank supported by WaspBanking.
// Use this in your script to open a bank with a single line of code.
function WaspBanking.OpenClosestBank(): Boolean;
begin
  if not WaspWalker.AtLocation(BankRSW, ClosestBankTile) then
    Exit(False);

  Result := Self.OpenBank(BankRSW, ClosestBankTile, ClosestBankColor);
end;

// Opens the closest bank collect box supported by WaspBanking.
// Use this in your script to open a bank with a single line of code.
function WaspBanking.OpenClosestCollectBox(): Boolean;
begin
  if not WaspWalker.AtLocation(BankRSW, ClosestBankTile) then
    Exit(False);

  Result := Self.OpenCollectBox(BankRSW, ClosestBankTile, ClosestBankColor);
end;


procedure WaspBanking.Free();
begin
  BankRSW.Free();                             ;
end;

begin
  AddOnTerminate(@WaspBanking.Free);
end;
